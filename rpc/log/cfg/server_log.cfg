# File: server_log.cfg
# Desc: 服务器日志配置(通用)
############################################################################

# root logger(根日志器).
# 日志异步属性,可以的取值:true/false, 默认为false.
root.asynchronous=true
# 日志记录器异步时, 是否要求一个独立的异步日志线程来专门负责此日志记录器输出
# 注意: 默认框架在识别到有一个或多个日志记录器时, 将启动一个所有日志记录器共享的日志输出线程, 如果有
#       个别日志记录器是高负载的日志记录器, 可以将此项配置成true, 以让日志记录器拥有独立的输出线程,
#       此选项只有在asynchronous为true时有效.
root.independentThread=false
# 日志刷新间隔,在异步模式有效,毫秒为单位,默认为200
root.flushInterval=200
# 指示是否接管输出到未知logger的message,默认为true
root.takeOver=true
# 日志记录器选项未配置时, 使用的默认配置来源, 有root或default两个选项, 选项配置具备继承性及覆盖性,非
# 根日志记录器(root)如果未配置过这个选项, 将使用根日志记录器, 如果有配置将使用自己的配置选项, 对于根
# 日志记录器, 此配置项只用来对非根产生继承影响.
# 选项含义:
# - root: 如果指定此选项, 在未配置的非根日志记录器选项参数读取的时候, 将使用根日志记录器里面的配置作
#         为指定日志记录器指定配置选项参数(注意: 像logFileName将不会无脑使用root配置, 这将造成日志错
#         乱, 如未配置将使用记录器本身名字来命名)
# - default: 如果指定此选项, 在未配置的日志记录器选项参数读取的时候, 将使用框架默认配置作为指定日志记
#         录器指定配置选项参数
root.notConfigUse=root
# 确定日志是否输出到控制台,可以的取值:true/false.
# >>>>>>>>>>>>>>>>>>>>>>>>>>控制台输出器配置选项<<<<<<<<<<<<<<<<<<<<<<<<<<
root.logToConsole=true
# 控制台日志输出级别,如果没有配置,使用level的配置作为控制台日志输出级别.
root.consoleLogLevel=TRACE
# 确定日志控制台输出格式,格式描述如下:
#	%N: 打印logger名字,对于当前配置,为root
#   %e: 打印进程主执行映像名(已去除扩展名)
# 	%g: 打印消息tag, 用于给同类型消息打入相同的tag信息.
#   %F: 打印日志所在函数名
#	%f: 打印日志所在的代码文件名
#	%l: 打印日志的代码所在的行数
#	%t: 线程Id
#	%p: 进程Id
#	%L: 日志模式(级别),如'TRACE','DEBUG','INFO' ...
#	%n: 换行符标记
#	%m: 打印日志消息本身
#	%T: 打印本地化时间格式的时间,如:'1970-01-01 00:00:00'
#	%%: 打印一个字符'%'
#	* : 其它字符将不被转议,照常打印
# 默认的格式(即不配置这一项的情况下采用的格式)为:'%T [%L] - %m%n'
root.consolePattern=%T [%-5L][%f:%l %F]<%g> - %m%n
# 是否控制台输出时多彩输出
root.colourfulOutput=true
# >>>>>>>>>>>>>>>>>>>>>>>>>>文件输出器配置选项<<<<<<<<<<<<<<<<<<<<<<<<<<
# 确定日志是否输出到文件.
root.logToFile=true
# 文件日志输出级别,如果没有配置,使用level的配置作为文件日志输出级别.
root.fileLogLevel=TRACE
# 是否强制使用执行文件路径作为 logFile 相对输出路径
root.forceAppLogPath=true
# 日志文件名, %p: 当前进程Id, %m: 当前主执行体映像名
root.logFile=./log/%m/%m
# 日志文件后缀
root.logFileSuffix=.log
# 日志文件缓冲大小,在异步模式有效,默认10M
root.fileBufferSize=8192
# 文件输出时的日志格式.
root.filePattern=%T [%-5L][%-10e][%f:%l %F][%p,%t]<%g> - %m%n
# 日志文件滚动模式
root.fileRollingMode=Daily # or Daily/NoRolling
# 日志文件单文件的最大大小,如果为0或者不配置,将不限制大小,以Byte为单位.
root.maxFileSize=409600000
# 日志文件最大备份索引,如果限定了最大日志文件大小.将会对日志进行按索引备份,如果为0或者不配置,将不会限制最大备份索引.
root.maxBackupIndex=10
# 是否延迟创建(备份日志文件), 进日志记录器初始化的时候, 默认将创建或更新日志记录文件, 在非常多日志记录器且大部分在进程生命周期期间都不可能产生任何日志的时候, 此选项将变得有用
root.lazyCreateLogFile=true
